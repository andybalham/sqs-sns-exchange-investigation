AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sqs-sns-exchange-investigation

  Investigation into using SQS and SNS for inter-Lambda exchanges.
  
Parameters:
  ApplicationName:
    Type: String
    Default: sqs-sns-exchange-investigation
  ApiStageName:
    Type: String
    Default: dev
        
Globals:
  Function:
    Runtime: nodejs12.x
    CodeUri: dist/
    Timeout: 3

Resources:

  TargetFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${ApplicationName}-TargetFunction
      Handler: lambda.handleTarget
      Environment:
        Variables:
          RESPONSE_TOPIC: !Ref TargetFunctionResponseTopic
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt TargetFunctionResponseTopic.TopicName
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt TargetFunctionRequestQueue.Arn
            BatchSize: 10
            Enabled: true

  # To allow your function time to process each batch of records, set the source queue's visibility timeout to 
  # at least 6 times the timeout that you configure on your function. The extra time allows for Lambda to retry
  # if your function execution is throttled while your function is processing a previous batch. 

  TargetFunctionRequestQueue:
    Type: AWS::SQS::Queue
    Properties: 
      QueueName: !Sub ${ApplicationName}-TargetFunctionRequestQueue

  TargetFunctionResponseTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName:
        Fn::Sub: ${ApplicationName}-TargetFunctionResponseTopic

  TestFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${ApplicationName}-TestFunction
      Handler: lambda.handleTest
      Environment:
        Variables:
          RESPONSE_SUBSCRIPTION_ID: !Sub ${ApplicationName}-TestFunction
          TARGET_FUNCTION_REQUEST_QUEUE_URL: !Ref TargetFunctionRequestQueue
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt TargetFunctionRequestQueue.QueueName
      Events:
        TargetFunctionResponse:
          Type: SNS
          Properties:
            Topic: !Ref TargetFunctionResponseTopic
            FilterPolicy:
              FunctionName:
                - !Sub ${ApplicationName}-TestFunction

Outputs:
  TargetFunctionArn:
    Description: "TargetFunction ARN"
    Value: !GetAtt TargetFunction.Arn
  TargetFunctionRequestQueueUrl:
    Description: "TargetFunction request queue URL"
    Value: !Ref TargetFunctionRequestQueue
  TargetFunctionRequestQueueName:
    Description: "TargetFunction request queue name"
    Value: !GetAtt TargetFunctionRequestQueue.QueueName
  TargetFunctionResponseTopicArn:
    Description: "TargetFunction response topic ARN"
    Value: !Ref TargetFunctionResponseTopic
